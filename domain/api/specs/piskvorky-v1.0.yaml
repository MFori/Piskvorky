openapi: "3.0.0"
info:
  version: v1
  title: Piskvorky API
  description: "Piskvorky app server REST API specification"
servers:
  - url: http://localhost:9090/v1
  - url: https://localhost:9090/v1
paths:

  /login:
    post:
      summary: Login user
      tags:
        - security
      security: []
      requestBody:
        description: Provide email and password
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: JWT token and validity (in ms)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /register:
    post:
      summary: Register user
      tags:
        - security
      security: []
      requestBody:
        description: Provide email and password
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '200':
          description: Register succes, auto login - JWT token and validity (in ms)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lost-passwd:
    post:
      summary: Request to send new password to email
      tags:
        - security
      security: []
      requestBody:
        description: Email to send new passoword
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LostPasswordRequest"
      responses:
        '200':
          description: Sent
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reset-passwd:
    post:
      summary: Request to send new password to email
      tags:
        - security
      security: []
      requestBody:
        description: Email, hash, new password
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        '200':
          description: Ok
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /profile:
    get:
      summary: Logged user profile info
      tags:
        - profile
      responses:
        '200':
          description: Profile info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileInfo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /profile/change-passwd:
    post:
      summary: Change password
      tags:
        - profile
      requestBody:
        description: Email, new password, current password
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
      responses:
        '200':
          description: Sent
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /friends:
    get:
      summary: List of friends
      tags:
        - friends
      responses:
        '200':
          description: Friends list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersListResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /friends/requests:
    get:
      summary: Get friendship requests
      tags:
        - friends
      responses:
        '200':
          description: Fridnship requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FriendsRequestsResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /friends/add:
    post:
      summary: Create friendship request
      tags:
        - friends
      requestBody:
        description: User id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFriendshipRequest"
      responses:
        '200':
          description: Request created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /friends/cancel:
    post:
      summary: Cancel friendship or friendship request
      tags:
        - friends
      requestBody:
        description: User id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelFriendshipRequest"
      responses:
        '200':
          description: Request cancelled
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /online-users:
    get:
      summary: List of online users
      tags:
        - friends
      responses:
        '200':
          description: Online users list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersListResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /game/invite/list:
    get:
      summary: List of valid game invitations
      tags:
        - game-invitation
      responses:
        '200':
          description: Game invitations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameInvitationsResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /game/invite/join:
    post:
      summary: Create/accept game invitation
      tags:
        - game-invitation
      requestBody:
        description: User id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGameRequest"
      responses:
        '200':
          description: Invitation created/accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /game/invite/cancel:
    post:
      summary: Cancel game invitation
      tags:
        - game-invitation
      requestBody:
        description: User id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelGameRequest"
      responses:
        '200':
          description: Invitation cancelled
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /game:
    get:
      summary: Get current game
      tags:
        - game
      responses:
        '200':
          description: Current game
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameSnap"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /game/play:
    post:
      summary: Make game move
      tags:
        - game
      requestBody:
        description: Move
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Move"
      responses:
        '200':
          description: Move played successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /game/giveup:
    post:
      summary: Give up game
      tags:
        - game
      responses:
        '200':
          description: Game giveup successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      required: [token]
      properties:
        token:
          type: string
    RegisterRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
    LostPasswordRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
    ResetPasswordRequest:
      type: object
      required: [ email, hash, password ]
      properties:
        email:
          type: string
        hash:
          type: string
        password:
          type: string
    ProfileInfo:
      type: object
      required: [email]
      properties:
        email:
          type: string
    ChangePasswordRequest:
      type: object
      required: [email, password, passwordCurrent]
      properties:
        email:
          type: string
        password:
          type: string
        passwordCurrent:
          type: string

    ApiUser:
      type: object
      required: [id, email, online, inGame]
      properties:
        id:
          type: integer
        email:
          type: string
        online:
          type: boolean
        inGame:
          type: boolean
    UsersListResponse:
      type: object
      required: [users]
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/ApiUser"
    FriendRequest:
      type: object
      required: [userId, email, created]
      properties:
        userId:
          type: integer
        email:
          type: string
        created:
          type: string
          format: date-time
    FriendsRequestsResponse:
      type: object
      required: [requests]
      properties:
        requests:
          type: array
          items:
            $ref: "#/components/schemas/FriendRequest"
    CreateFriendshipRequest:
      type: object
      required: [userId]
      properties:
        userId:
          type: integer
    CancelFriendshipRequest:
      type: object
      required: [userId]
      properties:
        userId:
          type: integer

    GameInvitation:
      type: object
      required: [userId, email, created]
      properties:
        userId:
          type: integer
        email:
          type: string
        created:
          type: string
          format: date-time
    GameInvitationsResponse:
      type: object
      required: [invitations]
      properties:
        invitations:
          type: array
          items:
            $ref: "#/components/schemas/GameInvitation"
    CreateGameRequest:
      type: object
      required: [userId]
      properties:
        userId:
          type: integer
    CancelGameRequest:
      type: object
      required: [ userId ]
      properties:
        userId:
          type: integer

    GameSnap:
      type: object
      required: [ status, board, cross, nought, winner, current ]
      properties:
        status:
          type: string
          enum: [running, end]
        board:
          $ref: "#/components/schemas/Board"
        cross:
          $ref: "#/components/schemas/Player"
        nought:
          $ref: "#/components/schemas/Player"
        current:
          $ref: "#/components/schemas/BoardValue"
        winner:
          $ref: "#/components/schemas/BoardValue"
    Board:
      type: object
      required: [ cells ]
      properties:
        cells:
          type: array
          items:
            $ref: "#/components/schemas/BoardCell"
    BoardCell:
      type: object
      required: [ x, y, value ]
      properties:
        x:
          type: integer
        y:
          type: integer
        value:
          $ref: "#/components/schemas/BoardValue"
    BoardValue:
      type: string
      enum: [none, cross, nought]
    Player:
      type: object
      required: [id, email, cross]
      properties:
        id:
          type: integer
        email:
          type: string
        cross:
          type: boolean
    Move:
      type: object
      required: [x, y]
      properties:
        x:
          type: integer
        y:
          type: integer

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

security:
  - bearerAuth: []